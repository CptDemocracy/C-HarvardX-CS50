PROBLEM SPECIFICATION:

Caesar’s cipher encrypts messages by "rotating" each letter by k positions, wrapping around 
from Z to A as needed (en.wikipedia.org/wiki/Caesar_cipher). If p is plaintext (i.e., an 
unencrypted message), pi is the ith character in p, and k is a secret key (i.e., a non-negative
integer), then each letter, ci, in the ciphertext, c, is computed as:

ci = (pi + k) % 26

For example, if k == 13, then input:

  Be sure to drink your Ovaltine!

becomes:

  Or fher gb qevax lbhe Binygvar!

My goal was to write, in caesar.c, a program that encrypts messages using Caesar’s cipher. 
The program must accept a single command-line argument: a non-negative integer k. If the program 
is executed without any command-line arguments or with more than one command-line argument, the 
program should inform the user of invalid input, and return a value of 1 immediately.

Otherwise, the program must proceed to prompt the user for a string of plaintext and then output 
that text with each alphabetical character "rotated" by k positions; non-alphabetical characters 
should be outputted unchanged. After outputting this ciphertext, the program should exit.
